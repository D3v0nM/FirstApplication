Index: app/src/androidTest/java/com/devon/firstapplication/SecondActivityTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.devon.firstapplication;\n\nimport android.content.Intent;\nimport android.content.pm.ActivityInfo;\nimport android.support.test.espresso.Espresso;\nimport android.support.test.espresso.UiController;\nimport android.support.test.espresso.ViewAction;\nimport android.support.test.espresso.contrib.RecyclerViewActions;\nimport android.support.test.espresso.matcher.ViewMatchers;\nimport android.support.test.rule.ActivityTestRule;\nimport android.view.View;\n\nimport org.hamcrest.Matcher;\nimport org.junit.Rule;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.junit.runners.JUnit4;\n\nimport static android.support.test.espresso.Espresso.onData;\nimport static android.support.test.espresso.Espresso.onView;\nimport static android.support.test.espresso.action.ViewActions.click;\nimport static android.support.test.espresso.action.ViewActions.scrollTo;\nimport static android.support.test.espresso.action.ViewActions.swipeLeft;\nimport static android.support.test.espresso.action.ViewActions.swipeRight;\nimport static android.support.test.espresso.assertion.ViewAssertions.matches;\nimport static android.support.test.espresso.matcher.ViewMatchers.isClickable;\nimport static android.support.test.espresso.matcher.ViewMatchers.isDisplayed;\nimport static android.support.test.espresso.matcher.ViewMatchers.isEnabled;\nimport static android.support.test.espresso.matcher.ViewMatchers.withEffectiveVisibility;\nimport static android.support.test.espresso.matcher.ViewMatchers.withId;\nimport static android.support.test.espresso.matcher.ViewMatchers.withText;\nimport static org.hamcrest.Matchers.anything;\nimport static org.hamcrest.core.AllOf.allOf;\n\n@RunWith(JUnit4.class)\npublic class SecondActivityTest {\n    //Enter a full name\n    String name = \"Devon Coolness\";\n    String email = \"can@not.com\";\n    String user = \"El Presidente\";\n    String pass = \"123456\";\n    String job = \"The Chief\";\n    String desc = \"Would you like to play a game??? How about 'Geo-thermal nuclear war'? No????\";\n    String age = \"33\";\n\n\n    @Rule\n    public ActivityTestRule<SecondActivity> activityTestRule =\n            new ActivityTestRule<SecondActivity>(SecondActivity.class){\n\n    @Override\n    protected Intent getActivityIntent() {\n\n        Intent intent = new Intent();\n\n        intent.putExtra(Constraints.KEY_USER, name);\n        intent.putExtra(Constraints.KEY_AGE, age);\n        intent.putExtra(Constraints.KEY_JOB, job);\n        intent.putExtra(Constraints.KEY_PROFILE, desc);\n\n        return intent;\n    }\n\n};\n\n\n\n        @Test\n    public void enterAllTabsTest() {\n          // activityTestRule.getActivityIntent();\n\n\n        // test screen rotation\n        activityTestRule.getActivity().setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);\n        Espresso.closeSoftKeyboard();\n        onView(withId(R.id.nameAndAge)).check(matches(withText(name + \"\\n\" + age )));\n         onView(withId(R.id.job)).check(matches(withText(\"Occupation:\\n\" + job)));\n        onView(withId(R.id.profileText)).check(matches(withText(\"Details you need to know: \\n\" + desc)));\n        activityTestRule.getActivity().setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\n       // Espresso.closeSoftKeyboard();\n        onView(withId(R.id.nameAndAge)).check(matches(withText(name + \"\\n\" + age)));\n        onView(withId(R.id.job)).check(matches(withText(\"Occupation:\\n\" + job)));\n        onView(withId(R.id.profileText)).check(matches(withText(\"Details you need to know: \\n\" + desc)));\n            onView(withId(R.id.viewPager)).check(matches(isDisplayed()));\n\n         //Check Matches Tab\n        verifyMatches();\n\n\n        //Swipe and verify Settings\n//        swipeRight();\n         moveThroughSettings();\n       activityTestRule.getActivity().setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);\n       Espresso.closeSoftKeyboard();\n//       verifySettings();\n      activityTestRule.getActivity().setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\n       Espresso.closeSoftKeyboard();\n\n        //Verify logoff button labeled correctly\n            onView(withId(R.id.viewPager)).perform(swipeRight());\n\n            scrollTo();\n            onView(withId(R.id.logoutBtn)).check(matches(isDisplayed()));\n        onView(withId(R.id.logoutBtn)).check(matches(withText(R.string.logout)));\n\n\n       // onView(withId(R.id.logoutBtn)).perform(click());\n        //turns out you can even remove the part of: \".check(matches(allOf( isEnabled(), isClickable())))\"\n            // and go straight into .perform( new ViewAction()\n            onView(withId(R.id.logoutBtn)).check(matches(allOf( isEnabled(), isClickable()))).perform(\n                    new ViewAction() {\n                        @Override\n                        public Matcher<View> getConstraints() {\n                            return isEnabled(); // no constraints, they are checked above\n                        }\n\n                        @Override\n                        public String getDescription() {\n                            return \"click plus button\";\n                        }\n\n                        @Override\n                        public void perform(UiController uiController, View view) {\n                            view.performClick();\n                        }\n                    }\n            );\n\n        }\n\n\n\n\n\n    public void verifyMatches(){\n           //Swipe to matches tab\n        activityTestRule.getActivity().setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\n        //onView(withId(R.id.viewPager)).check(matches(isCompletelyDisplayed()));\n//        onView(withId(R.id.viewPager)).perform(click());\n       onView(withId(R.id.viewPager)).perform(swipeLeft());\n\n        onView(withId(R.id.activity_second)).check(matches(isDisplayed()));\n\n       onView(withId(R.id.recycler_view)).perform(scrollTo(),\n               RecyclerViewActions.actionOnItemAtPosition(0, click()));\n\n  //      activityTestRule.getActivity().setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);\n  //      Espresso.closeSoftKeyboard();\n        scrollTo();\n        onData(anything())\n                .atPosition(0)\n                .onChildView(allOf(withId(R.id.matches_name), withText(R.string.matches)));\n\n\n        activityTestRule.getActivity().setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\n        Espresso.closeSoftKeyboard();\n//        onView(withId(R.layout.matches_tab)).check(matches(withText(R.string.matches)));\n\n //\n        //onData(anything()).inAdapterView(withContentDescription(\"desc\")).atPosition(x).perform(click());\n        scrollTo();\n       // onData(anything()).inAdapterView(withId(R.id.recycler_view)).atPosition(3).check(matches(withText(R.string.matches)));\n       //onData(anyOf()).inAdapterView((withId(R.id.recycler_view))).atPosition(3).perform(click());\n      onData(withId(R.id.like_button)).atPosition(3).inAdapterView(withEffectiveVisibility(ViewMatchers.Visibility.GONE));\n\n               //inAdapterView(withContentDescription(\"like\")).perform(click()\n\n\n\n\n\n    }\n\n    public void moveThroughSettings(){\n\n\n        onView(withId(R.id.viewPager)).perform(swipeLeft());\n\n        onView(withId(R.id.viewPager)).perform(swipeRight());\n\n            onView(withId(R.id.settings_tab)).check(matches(withText(R.string.settings)));\n\n       // onView(withId(R.id.viewPager)).perform(swipeRight());\n\n\n    }\n\n\n\n//    public static void setDate(int datePickerLaunchViewId, int year, int monthOfYear, int dayOfMonth) {\n//\n//        onView(withId(datePickerLaunchViewId)).perform(click());\n//        onView(withClassName(Matchers.equalTo(DatePicker.class.getName()))).\n//                perform(PickerActions.setDate(year, monthOfYear, dayOfMonth));\n//        onView(withId(android.R.id.button1)).perform(click());\n//\n//    }\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/devon/firstapplication/SecondActivityTest.java	(date 1526792427000)
+++ app/src/androidTest/java/com/devon/firstapplication/SecondActivityTest.java	(date 1526841551000)
@@ -116,7 +116,7 @@
 
                         @Override
                         public String getDescription() {
-                            return "click plus button";
+                            return "click Logout button";
                         }
 
                         @Override
@@ -152,9 +152,10 @@
                 .onChildView(allOf(withId(R.id.matches_name), withText(R.string.matches)));
 
 
+
         activityTestRule.getActivity().setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
         Espresso.closeSoftKeyboard();
-//        onView(withId(R.layout.matches_tab)).check(matches(withText(R.string.matches)));
+      //  onView(withId(R.layout.matches_tab)).check(matches(withText(R.string.matches)));
 
  //
         //onData(anything()).inAdapterView(withContentDescription("desc")).atPosition(x).perform(click());
